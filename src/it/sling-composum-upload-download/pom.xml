<?xml version="1.0" encoding="UTF-8"?>
<!--
  #%L
  wcm.io
  %%
  Copyright (C) 2022 wcm.io
  %%
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
  #L%
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  
  <parent>
    <groupId>io.wcm.maven</groupId>
    <artifactId>io.wcm.maven.global-parent</artifactId>
    <version>40</version>
    <relativePath/>
  </parent>

  <groupId>io.wcm.maven.plugins.it</groupId>
  <artifactId>wcmio-content-package-maven-plugin-sling-composum-upload-download</artifactId>
  <version>@project.version@</version>
  
  <properties>
    <!-- Java version -->
    <java.version>1.8</java.version>
    <build.compiler.release>8</build.compiler.release>

    <!-- start with -DkeepITServerRunning=true to allow to rerun ITs or inspect the server after the ITs have been executed there -->
    <keepITServerRunning>false</keepITServerRunning>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.osgi</groupId>
      <artifactId>org.osgi.framework</artifactId>
      <version>1.8.0</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>1.7.25</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.sling</groupId>
      <artifactId>org.apache.sling.junit.core</artifactId>
      <version>1.0.28</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.sling</groupId>
      <artifactId>org.apache.sling.testing.rules</artifactId>
      <version>1.0.8</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.sling</groupId>
      <artifactId>org.apache.sling.junit.teleporter</artifactId>
      <version>1.0.20</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <executions>
          <!-- Find free ports to run our server -->
          <execution>
            <id>reserve-server-port</id>
            <goals>
              <goal>reserve-network-port</goal>
            </goals>
            <phase>pre-integration-test</phase>
            <configuration>
              <portNames>
                <!-- reserved port must be stored in property because it must be passed to the slingstart-maven-plugin -->
                <portName>http.port</portName>
              </portNames>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <!-- the Sling instance is provisioned from the model in src/main/provisioning/model.txt -->
        <groupId>org.apache.sling</groupId>
        <artifactId>slingstart-maven-plugin</artifactId>
        <version>1.9.12</version>
        <extensions>true</extensions>
        <executions>
          <execution>
            <id>prepare-launchpad-package</id>
            <goals>
              <goal>prepare-package</goal>
            </goals>
            <phase>pre-integration-test</phase>
          </execution>
          <execution>
            <id>build-launchpad-package</id>
            <goals>
              <goal>package</goal>
            </goals>
            <phase>pre-integration-test</phase>
            <configuration>
              <attachArtifact>false</attachArtifact>
            </configuration>
          </execution>
          <execution>
            <id>start-container-before-IT</id>
            <goals>
              <goal>start</goal>
            </goals>
            <configuration>
            </configuration>
          </execution>
          <execution>
            <id>stop-container-after-IT</id>
            <goals>
              <goal>stop</goal>
            </goals>
            <configuration>
              <shouldBlockUntilKeyIsPressed>${keepITServerRunning}</shouldBlockUntilKeyIsPressed>
            </configuration>
          </execution>
        </executions>
        <configuration>
          <servers>
            <!-- this configuration applies to both 'start' and 'stop' -->
            <server>
              <id>singleinstance</id>
              <port>${http.port}</port>
              <stdOutFile>sling/logs/stdout.log</stdOutFile>
            </server>
          </servers>
          <!-- this configuration only applies to 'prepare-package' and 'package' -->
          <disableExtendingMavenClasspath>true</disableExtendingMavenClasspath>
          <usePomDependencies>true</usePomDependencies>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <executions>
          <execution>
            <configuration>
              <systemProperties>
                <http.port>${http.port}</http.port>
              </systemProperties>
            </configuration>
          </execution>
        </executions>
        <configuration>
          <systemPropertyVariables>
            <launchpad.http.server.url>http://localhost:${http.port}</launchpad.http.server.url>
            <server.ready.timeout.seconds>120</server.ready.timeout.seconds>
            <server.ready.path.1>/starter/index.html:Getting Started</server.ready.path.1>
          </systemPropertyVariables>
        </configuration>
      </plugin>

      <plugin>
        <groupId>@project.groupId@</groupId>
        <artifactId>@project.artifactId@</artifactId>
        <version>@project.version@</version>
        <executions>
          <execution>
            <id>install</id>
            <phase>integration-test</phase>
            <goals>
              <goal>install</goal>
            </goals>
          </execution>
          <execution>
            <id>download</id>
            <phase>integration-test</phase>
            <goals>
              <goal>download</goal>
            </goals>
            <configuration>
              <outputFile>${project.build.directory}/content-package-1.0.zip</outputFile>
              <unpack>true</unpack>
            </configuration>
          </execution>
        </executions>
        <configuration>
          <serviceURL>http://localhost:${http.port}/bin/cpm/</serviceURL>
          <userId>admin</userId>
          <password>admin</password>
          <packageFile>content-package-1.0.zip</packageFile>
        </configuration>
      </plugin>

    </plugins>
  </build>

</project>
